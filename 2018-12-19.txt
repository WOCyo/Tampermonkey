{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"EX-百度云盘","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":true,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link?*","*://yun.baidu.com/share/link?*","*://eyun.baidu.com/s/*","*://eyun.baidu.com/enterprise/share/link?*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1538736376949,"data":{}},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/26638-ex-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98/code/EX-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98.user.js","uuid":"d1756a9c-412b-4b52-8bed-b43718243c55","source":"","requires":[{"meta":{"name":"babel.min.js","url":"https://cdn.bootcss.com/babel-standalone/6.26.0/babel.min.js","ts":1545049213233,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"clipboard.min.js","url":"https://cdn.bootcss.com/clipboard.js/1.5.16/clipboard.min.js","ts":1545049212715,"mimetype":"text/javascript"},"source":""}]},{"name":"破解VIP会员视频集合","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://*.bilibili.com/blackboard/*"],"orig_includes":[],"orig_matches":["*://*.iqiyi.com/*","*://*.youku.com/*","*://*.le.com/*","*://*.letv.com/*","*://v.qq.com/*","*://*.tudou.com/*","*://*.mgtv.com/*","*://film.sohu.com/*","*://tv.sohu.com/*","*://*.acfun.cn/v/*","*://*.bilibili.com/*","*://vip.1905.com/play/*","*://*.pptv.com/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.fun.tv/vplay/*","*://*.wasu.cn/Play/show/*","*://*.56.com/*"],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"intabSize":"s{\"height\":\"undefined\",\"width\":\"undefined\",\"left\":\"undefined\",\"top\":\"undefined\"}","replaceRaw":"btrue"},"ts":1543938877257},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/27530-%E7%A0%B4%E8%A7%A3vip%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88/code/%E7%A0%B4%E8%A7%A3VIP%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88.user.js","uuid":"338a201e-8d6b-491a-9b3b-c84fa650f93b","source":""},{"name":"网页限制解除(改)","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["eemm.me"],"orig_excludes":["*www.bilibili.com/video*","*www.bilibili.com/bangumi*","*www.panda.tv*"],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"rwl_userData":"o{\"status\":1,\"version\":0.1,\"message\":\"啦啦啦,啦啦啦,我是卖报的小行家\",\"positionTop\":55,\"positionLeft\":0,\"positionRight\":\"auto\",\"addBtn\":true,\"connectToTheServer\":true,\"waitUpload\":[],\"currentURL\":\"https://smccis.smc.edu/smcweb/f?p=420181023:10:13561458830776::NO:107::\",\"rules\":{\"rule_def\":{\"name\":\"default\",\"hook_eventNames\":\"contextmenu|select|selectstart|copy|cut|dragstart|mousemove|beforeunload\",\"unhook_eventNames\":\"mousedown|mouseup|keydown|keyup\",\"dom0\":true,\"hook_addEventListener\":true,\"hook_preventDefault\":true,\"hook_set_returnValue\":true,\"add_css\":true},\"rule_plus\":{\"name\":\"default\",\"hook_eventNames\":\"contextmenu|select|selectstart|copy|cut|dragstart|mousedown|mouseup|mousemove|beforeunload\",\"unhook_eventNames\":\"keydown|keyup\",\"dom0\":true,\"hook_addEventListener\":true,\"hook_preventDefault\":true,\"hook_set_returnValue\":true,\"add_css\":true},\"rule_zhihu\":{\"name\":\"default\",\"hook_eventNames\":\"contextmenu|select|selectstart|copy|cut|dragstart|mousemove\",\"unhook_eventNames\":\"keydown|keyup\",\"dom0\":true,\"hook_addEventListener\":true,\"hook_preventDefault\":true,\"hook_set_returnValue\":true,\"add_css\":true}},\"data\":[\"80.78.132.88\",\"b.faloo.com\",\"bbs.coocaa.com\",\"book.hjsm.tom.com\",\"book.zhulang.com\",\"book.zongheng.com\",\"chokstick.com\",\"chuangshi.qq.com\",\"city.udn.com\",\"cutelisa55.pixnet.net\",\"drive.google.com\",\"huayu.baidu.com\",\"imac.hk\",\"life.tw\",\"luxmuscles.com\",\"movie.douban.com\",\"news.missevan.com\",\"read.qidian.com\",\"smccis.smc.edu\",\"vipreader.qidian.com\",\"www.15yan.com\",\"www.17k.com\",\"www.18183.com\",\"www.360doc.com\",\"www.365yg.com\",\"www.coco01.net\",\"www.eyu.com\",\"www.hongshu.com\",\"www.hongxiu.com\",\"www.imooc.com\",\"www.jjwxc.net\",\"www.pigai.org\",\"www.ppkao.com\",\"www.readnovel.com\",\"www.ruiwen.com\",\"www.sdifen.com\",\"www.shangc.net\",\"www.sis001.com\",\"www.tadu.com\",\"www.xxsy.net\",\"www.z3z4.com\",\"www.zhihu.com\",\"yuedu.163.com\"]}"},"ts":1544099092832},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/28497-remove-web-limits-modified/code/Remove%20web%20limits(modified).user.js","uuid":"c104af9e-aee4-4d7c-b0ea-a927fb2bc634","source":""},{"name":"VIP视频在线解析破解去广告（全网）2018.11.13更新可用","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://v.youku.com/v_show/*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/dianying/*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://*.acfun.cn/v/*","*://*.bilibili.com/video/*","*://*.bilibili.com/anime/*","*://vip.pptv.com/show/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.wasu.cn/Play/show/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1538736393928,"data":{}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/35848-vip%E8%A7%86%E9%A2%91%E5%9C%A8%E7%BA%BF%E8%A7%A3%E6%9E%90%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%85%A8%E7%BD%91-2018-9-9%E6%9B%B4%E6%96%B0%E5%8F%AF%E7%94%A8/code/VIP%E8%A7%86%E9%A2%91%E5%9C%A8%E7%BA%BF%E8%A7%A3%E6%9E%90%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A%EF%BC%88%E5%85%A8%E7%BD%91%EF%BC%89201899%E6%9B%B4%E6%96%B0%E5%8F%AF%E7%94%A8.user.js","uuid":"7234aa0f-f172-439c-a243-e736a1d7c693","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"http://cdn.bootcss.com/jquery/1.8.3/jquery.min.js","ts":1542198771125,"mimetype":"text/javascript"},"source":""}]},{"name":"全网音乐一键免费下载 一键搜索 在线试听 【高清品质请选择QQ下载源】2018.11.13更新","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://music.163.com/*","*://y.qq.com/*","*://www.kugou.com/*","*://www.kuwo.cn/*","*://www.xiami.com/*","*://music.baidu.com/*","*://www.qingting.fm/*","*://www.lizhi.fm/*","*://music.migu.cn/*","*://www.ximalaya.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1538736404119,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/37058-%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E4%B8%80%E9%94%AE%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD-%E4%B8%80%E9%94%AE%E6%90%9C%E7%B4%A2-%E5%9C%A8%E7%BA%BF%E8%AF%95%E5%90%AC-%E9%AB%98%E6%B8%85%E5%93%81%E8%B4%A8%E8%AF%B7%E9%80%89%E6%8B%A9qq%E4%B8%8B%E8%BD%BD%E6%BA%90/code/%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E4%B8%80%E9%94%AE%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD%20%E4%B8%80%E9%94%AE%E6%90%9C%E7%B4%A2%20%E5%9C%A8%E7%BA%BF%E8%AF%95%E5%90%AC%20%E3%80%90%E9%AB%98%E6%B8%85%E5%93%81%E8%B4%A8%E8%AF%B7%E9%80%89%E6%8B%A9QQ%E4%B8%8B%E8%BD%BD%E6%BA%90%E3%80%91.user.js","uuid":"f703987c-6c99-4cce-8f6e-9320c36afd4d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDlhajnvZHpn7PkuZDkuIDplK7lhY3otLnkuIvovb0g5LiA6ZSu5pCc57SiIOWcqOe6v+ivleWQrCDjgJDpq5jmuIXlk4HotKjor7fpgInmi6lRUeS4i+i9vea6kOOAkTIwMTguMTEuMTPmm7TmlrAKLy8gQHZlcnNpb24gICAgICAxLjUxCi8vIEBob21lcGFnZSAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzM3MDU4Ci8vIEBtYXRjaCAgICAgICAgKjovL211c2ljLjE2My5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly95LnFxLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy5rdWdvdS5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly93d3cua3V3by5jbi8qCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy54aWFtaS5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly9tdXNpYy5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly93d3cucWluZ3RpbmcuZm0vKgovLyBAbWF0Y2ggICAgICAgICo6Ly93d3cubGl6aGkuZm0vKgovLyBAbWF0Y2ggICAgICAgICo6Ly9tdXNpYy5taWd1LmNuLyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LnhpbWFsYXlhLmNvbS8qCi8vIEBkZXNjcmlwdGlvbiAg5YWo572R6Z+z5LmQ5Zyo57q/6K+V5ZCsIOS4gOmUruWFjei0ueS4i+i9vSDkuIDplK7mkJzntKIg5o+Q5L6b5aSa56uZ5ZCI5LiAIOmfs+S5kOivleWQrCDpn7PkuZDkuIvovb0g6Z+z5LmQ5pCc57Si6Kej5Yaz5pa55qGI77yM572R5piT5LqR6Z+z5LmQ77yMUVHpn7PkuZDvvIzphbfni5fpn7PkuZDvvIzphbfmiJHpn7PkuZDvvIzomb7nsbPpn7PkuZDvvIznmb7luqbpn7PkuZDvvIzonLvonJNGTe+8jOiNlOaenUZN77yM5Zac6ams5ouJ6ZuFCi8vIEBncmFudCAgICAgICAgdW5zYWZlV2luZG93Ci8vIEByZXF1aXJlICAgICAgaHR0cDovL2Nkbi5ib290Y3NzLmNvbS9qcXVlcnkvMS44LjMvanF1ZXJ5Lm1pbi5qcwovLyBAaWNvbiAgICAgICAgIGh0dHA6Ly9tdXNpYy5zb25pbWVpLmNuL2Zhdmljb24uaWNvCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtZW5kCi8vIEBuYW1lc3BhY2UgCi8vID09L1VzZXJTY3JpcHQ9PQooZnVuY3Rpb24oKSB7CgkndXNlIHN0cmljdCc7Cgl2YXIgY3VyUGxheVNpdGUgPSAnJzsKCXZhciBjdXJXb3JkcyA9ICcnOwoJdmFyIHZpZGVvU2l0ZSA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwoJdmFyIHJlV1kgPSAvMTYzKC4qKXNvbmcvaTsKCXZhciByZVFRID0gL1FRKC4qKXNvbmcvaTsKCXZhciByZUtHID0gL2t1Z291KC4qKXNvbmcvaTsKCXZhciByZUtXID0gL2t1d28oLiopeWlueXVlL2k7Cgl2YXIgcmVYTSA9IC94aWFtaS9pOwoJdmFyIHJlQkQgPSAvYmFpZHUvaTsKCXZhciByZVFUID0gL3Fpbmd0aW5nL2k7Cgl2YXIgcmVMWiA9IC9saXpoaS9pOwoJdmFyIHJlTUcgPSAvbWlndS9pOwoJdmFyIHJlWE1MWSA9IC94aW1hbGF5YS9pOwoJdmFyIHZpcEJ0biA9ICc8YSB0YXJnZXQ9Il9ibGFuayIgaWQ9IlZpcE11c2ljQnRuIiBzdHlsZT0ibWFyZ2luOjEwcHggMDtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjAgNXB4O2hlaWdodDoyMnB4O2JvcmRlcjoxcHggc29saWQgcmVkO2NvbG9yOnJlZDt2ZXJ0aWNhbC1hbGlnbjpib3R0b207dGV4dC1kZWNvcmF0aW9uOm5vbmU7Zm9udC1zaXplOjE3cHg7bGluZS1oZWlnaHQ6MjJweDtjdXJzb3I6cG9pbnRlcjsiPuS4gOmUruWFjei0ueS4i+i9vTwvYT4nOwoKICAvL+e9keaYk+S6kemfs+S5kAogIGlmKHJlV1kudGVzdCh2aWRlb1NpdGUpKXsKICAgIHZhciBUaXRsZSA9ICQoJy51LWljbi0zNycpOwogICAgVGl0bGUucGFyZW50KCcuaGQnKS5hZnRlcih2aXBCdG4pOwogICAgJCgnI1ZpcE11c2ljQnRuJykuYXR0cignaHJlZicsJ2h0dHA6Ly9tdXNpYy5zb25pbWVpLmNuLz91cmw9JyArIGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZi5yZXBsYWNlKCdodHRwOi8vbXVzaWMuMTYzLmNvbScsICJodHRwOi8vbXVzaWMuMTYzLmNvbS8jIikpKTsKICB9CiAgCiAgLy9RUemfs+S5kAogIGlmKHJlUVEudGVzdCh2aWRlb1NpdGUpKXsKICAgIHZhciBUaXRsZSA9ICQoJy5kYXRhX19uYW1lX3R4dCcpOwogICAgVGl0bGUucGFyZW50KCcuZGF0YV9fbmFtZScpLmFmdGVyKHZpcEJ0bik7CiAgICAkKCcjVmlwTXVzaWNCdG4nKS5hdHRyKCdocmVmJywnaHR0cDovL211c2ljLnNvbmltZWkuY24vP3VybD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSk7CiAgfQogIAogIC8v6YW354uX6Z+z5LmQCiAgaWYocmVLRy50ZXN0KHZpZGVvU2l0ZSkpewoJS0dhZGQoKTsKCXNldEludGVydmFsKGZ1bmN0aW9uKCl7S0dhZGQoKX0sMTAwMCk7CglmdW5jdGlvbiBLR2FkZCgpewoJCWlmKCQoIiNWaXBNdXNpY0J0biIpLmxlbmd0aD09MCAmJiAkKCIuYXVkaW9OYW1lIikubGVuZ3RoPjApewoJCQl2YXIgVGl0bGUgPSAkKCcuYXVkaW9OYW1lJyk7CgkJCVRpdGxlLnBhcmVudCgnLnNvbmdOYW1lJykuYWZ0ZXIodmlwQnRuKTsKCQl9CgkJJCgiI1ZpcE11c2ljQnRuIikuYXR0cigiaHJlZiIsImh0dHA6Ly9tdXNpYy5zb25pbWVpLmNuLz91cmw9IiArIGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZikpOwoJfQogIH0KCiAgLy/phbfmiJHpn7PkuZAKICBpZihyZUtXLnRlc3QodmlkZW9TaXRlKSl7CiAgICB2YXIgVGl0bGUgPSAkKCcjc2lubGVzRG93bkJ0bicpOwogICAgVGl0bGUucGFyZW50KCcuZG93bicpLmFmdGVyKHZpcEJ0bik7CiAgICAkKCcjVmlwTXVzaWNCdG4nKS5hdHRyKCdocmVmJywnaHR0cDovL211c2ljLnNvbmltZWkuY24vP3VybD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSk7CiAgfQoKICAvL+iZvuexs+mfs+S5kAogIGlmKHJlWE0udGVzdCh2aWRlb1NpdGUpKXsKICAgIHZhciBUaXRsZSA9ICQoJy5wbGF5ZXInKTsKICAgIFRpdGxlLnBhcmVudCgnLnNvbmdfaW5mbycpLmFmdGVyKHZpcEJ0bik7CiAgICAkKCcjVmlwTXVzaWNCdG4nKS5hdHRyKCdocmVmJywnaHR0cDovL211c2ljLnNvbmltZWkuY24vP3VybD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSk7CiAgfQogIAogIC8v55m+5bqm6Z+z5LmQCiAgaWYocmVCRC50ZXN0KHZpZGVvU2l0ZSkpewogICAgdmFyIFRpdGxlID0gJCgnLnNvbmdwYWdlLXRpdGxlJyk7CiAgICBUaXRsZS5wYXJlbnQoJy5zb25nJykuYWZ0ZXIodmlwQnRuKTsKICAgICQoJyNWaXBNdXNpY0J0bicpLmF0dHIoJ2hyZWYnLCdodHRwOi8vbXVzaWMuc29uaW1laS5jbi8/dXJsPScgKyBlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLmhyZWYpKTsKICB9CiAgCiAgLy/onLvonJNGTQogIGlmKHJlUVQudGVzdCh2aWRlb1NpdGUpKXsKCVFUYWRkKCk7CglzZXRJbnRlcnZhbChmdW5jdGlvbigpe1FUYWRkKCl9LDEwMDApOwoJZnVuY3Rpb24gUVRhZGQoKXsKCQlpZigkKCIjVmlwTXVzaWNCdG4iKS5sZW5ndGg9PTAgJiYgJCgiLnNwcml0ZS1wcm9ncmFtIikubGVuZ3RoPjAgJiYgL3Fpbmd0aW5nKC4qKXByb2dyYW1zL2kudGVzdCh3aW5kb3cubG9jYXRpb24uaHJlZikpewoJCQkkKCIuc3ByaXRlLXByb2dyYW0iKS5wYXJlbnQoKS5hZnRlcih2aXBCdG4pOwoJCX0KCQkkKCIjVmlwTXVzaWNCdG4iKS5hdHRyKCJocmVmIiwiaHR0cDovL211c2ljLnNvbmltZWkuY24vP3VybD0iICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSk7Cgl9CiAgfQoKICAvL+iNlOaenUZNCiAgaWYocmVMWi50ZXN0KHZpZGVvU2l0ZSkpewogICAgdmFyIFRpdGxlID0gJCgnLmF1ZGlvTmFtZScpOwogICAgVGl0bGUucGFyZW50KCcuYXVkaW9JbmZvJykuYWZ0ZXIodmlwQnRuKTsKICAgICQoJyNWaXBNdXNpY0J0bicpLmF0dHIoJ2hyZWYnLCdodHRwOi8vbXVzaWMuc29uaW1laS5jbi8/dXJsPScgKyBlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLmhyZWYpKTsKICB9CiAgCiAgLy/llpzpqazmi4npm4UKICBpZihyZVhNTFkudGVzdCh2aWRlb1NpdGUpKXsKCVhNYWRkKCk7CglzZXRJbnRlcnZhbChmdW5jdGlvbigpe1hNYWRkKCl9LDEwMDApOwoJZnVuY3Rpb24gWE1hZGQoKXsKCQlpZigkKCIjVmlwTXVzaWNCdG4iKS5sZW5ndGg9PTAgJiYgJCgiLmRldGFpbENvbnRlbnRfdGl0bGUiKS5sZW5ndGg+MCAmJiAveGltYWxheWEoLiopc291bmQvaS50ZXN0KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSl7CgkJCXZhciBUaXRsZSA9ICQoJy5kZXRhaWxDb250ZW50X3RpdGxlJyk7CgkJCVRpdGxlLnBhcmVudCgnLnJpZ2h0JykuYWZ0ZXIodmlwQnRuKTsKCQl9CgkJJCgiI1ZpcE11c2ljQnRuIikuYXR0cigiaHJlZiIsImh0dHA6Ly9tdXNpYy5zb25pbWVpLmNuLz91cmw9IiArIGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZikpOwoJfQogIH0gCiAgCn0pKCk7","requires":[{"meta":{"name":"jquery.min.js","url":"http://cdn.bootcss.com/jquery/1.8.3/jquery.min.js","ts":1542198771135,"mimetype":"text/javascript"},"source":""}]},{"name":"去百度搜索置顶推广 (ECMA6)","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["*"],"orig_excludes":[],"orig_includes":["*www.baidu.com*","*zhidao.baidu.com/search*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1538736410113,"data":{}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/10019-%E5%8E%BB%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E7%BD%AE%E9%A1%B6%E6%8E%A8%E5%B9%BF-ecma6/code/%E5%8E%BB%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E7%BD%AE%E9%A1%B6%E6%8E%A8%E5%B9%BF%20(ECMA6).user.js","uuid":"aead3ddb-56c5-4ac7-a5c1-6d3f3ce853ea","source":""},{"name":"百度网盘直接下载助手 直链加速版","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1538736476211,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/39504-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B-%E7%9B%B4%E9%93%BE%E5%8A%A0%E9%80%9F%E7%89%88/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B%20%E7%9B%B4%E9%93%BE%E5%8A%A0%E9%80%9F%E7%89%88.user.js","uuid":"5aeaa637-6db5-45eb-999c-c2abc4338e50","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js","ts":1545049212877,"mimetype":"text/javascript"},"source":""}]},{"name":"The best Youtube Downloader, download video MP4, AVI, MP3, HD, 1080P, 2K, 4k & 8K","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1538736504687,"data":{}},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/369418-the-best-youtube-downloader-download-video-mp4-avi-mp3-hd-1080p-2k-4k-8k/code/The%20best%20Youtube%20Downloader,%20download%20video%20MP4,%20AVI,%20MP3,%20HD,%201080P,%202K,%204k%20%208K.user.js","uuid":"450ab25b-a3f3-4cd7-b2a3-c46004279a80","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFRoZSBiZXN0IFlvdXR1YmUgRG93bmxvYWRlciwgZG93bmxvYWQgdmlkZW8gTVA0LCBBVkksIE1QMywgSEQsIDEwODBQLCAySywgNGsgJiA4SwovLyBAbmFtZXNwYWNlICAgaHR0cHM6Ly9kaXN0aWxsdmlkZW8uY29tLwovLyBAdmVyc2lvbiAgICAgNS4xCi8vIEBkYXRlICAgICAgICAyMDE4LTExLTA3Ci8vIEBkZXNjcmlwdGlvbiBEb3dubG9hZCBhbnkgdmlkZW8gYW5kIG11c2ljIChhdWRpbykgZnJvbSBZb3V0dWJlLCBUd2l0dGVyLCBWaW1lbywgRmFjZWJvb2ssIEluc3RhZ3JhbSwgU291bmRDbG91ZCwgRGFpbHltb3Rpb24sIExpdmVsZWFrLCBCcmVhaywgSW1ndXIsIE1hc2hhYmxlLCBSZWRkaXQsIDFUViwgOWdhZywgVkssIFRFRCwgeW91a3UsIGJpbGliaWxpLCBJTURiLCBFU1BOLCBGbGlja3IsIEJhbmRjYW1wLCBwb3JuaHViLCA5Z2FnLCBWSy5jb20sIG9rLnJ1LCB0di5jb20gYW5kIDEwLDAwMCBtb3JlIHNpdGVzIGZvciBmcmVlLiBBbHNvIHN1cHBvcnQgdG8gZG93bmxvYWQgc3VidGl0bGVzLiBGcmVlLCBmYXN0IGFuZCBlYXN5IHRvIHVzZS4gTm8gbmVlZCB0byBpbnN0YWxsIGFueSBhbm5veWluZyBzb2Z0d2FyZXMuIFN1cHBvcnRpbmcgTVA0LCBXRUJNLCBBVkksIDNHUCwgRkxWLCBINjQsIEFDQywgRkxBLCBNUDMsIE00QSwgOEssIDZLLDRLLCAySywgMTA4MCwgNzIwLCA0ODAsIDM2MCwgZXRjLgovLyBAYXV0aG9yICAgICAgRGlzdGlsbFZpZGVvLmNvbQovLyBAY29weXJpZ2h0ICAgMjAxOCwgRGlzdGlsbFZpZGVvLmNvbQovLyBAaG9tZXBhZ2UgICAgaHR0cHM6Ly9kaXN0aWxsdmlkZW8uY29tL2V4dGVuc2lvbiNleHRlbnNpb24KLy8gQGNvbXBhdGlibGUgY2hyb21lCi8vIEBjb21wYXRpYmxlIGZpcmVmb3gKLy8gQGNvbXBhdGlibGUgb3BlcmEKLy8gQGNvbXBhdGlibGUgc2FmYXJpCi8vIEBsaWNlbnNlIE1JVCBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVAovLyBAbWF0Y2ggICAgICAgICAgKjovLyoueW91dHViZS5jb20vKgovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKCiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBvbHltZXItYXBwIikgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1hc3RoZWFkIikgfHwgd2luZG93LlBvbHltZXIpIHsKICAgIHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCJ3YXRjaD92PSIpIDwgMCkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY291bnQiKSAmJiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZGlzdGlsbHZpZGVvIikgPT09IG51bGwpIHsKICAgICAgICAgICAgQWRkeXRwb2x5bWVyKCk7CiAgICAgICAgfQogICAgfSwgMTAwKTsKfSBlbHNlIHsKICAgIHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCJ3YXRjaD92PSIpIDwgMCkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgid2F0Y2g3LXN1YnNjcmlwdGlvbi1jb250YWluZXIiKSAmJiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZGlzdGlsbHZpZGVvIikgPT09IG51bGwpIHsKICAgICAgICAgICAgQWRkaHRtbERWKCk7CiAgICAgICAgfQogICAgfSwgMTAwKTsKfQoKZnVuY3Rpb24gQWRkaHRtbERWKCkgewogICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ3YXRjaDctc3Vic2NyaXB0aW9uLWNvbnRhaW5lciIpKSB7CiAgICAgICAgdmFyIHdyYXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2F0Y2g3LXN1YnNjcmlwdGlvbi1jb250YWluZXInKTsKICAgICAgICB2YXIgYnV0dG9uID0gIjxkaXYgaWQ9J2Rpc3RpbGx2aWRlbycgc3R5bGU9J2Rpc3BsYXk6IGlubGluZS1ibG9jazsgbWFyZ2luLWxlZnQ6IDEwcHg7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Jz4iOwogICAgICAgIGJ1dHRvbiArPSAiPGEgaHJlZj1cImh0dHBzOi8vZGlzdGlsbHZpZGVvLmNvbS8/dXJsPSIgKyB3aW5kb3cubG9jYXRpb24uaHJlZiArICJcIiB0aXRsZT1cIkRvd25sb2FkIHRoaXMgdmlkZW9cIiB0YXJnZXQ9XCJfYmxhbmtcIiIgKwogICAgICAgICAgICAic3R5bGU9XCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGZvbnQtc2l6ZTogaW5oZXJpdDsgaGVpZ2h0OiAyMnB4OyBib3JkZXI6IDFweCBzb2xpZCByZ2IoMCwgMTgzLCA5MCk7IGJvcmRlci1yYWRpdXM6IDNweDsgcGFkZGluZy1sZWZ0OiAyOHB4OyBjdXJzb3I6IHBvaW50ZXI7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IHBvc2l0aW9uOiByZWxhdGl2ZTsgbGluZS1oZWlnaHQ6IDIycHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgei1pbmRleDogMTsgY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcIj4iOwogICAgICAgIGJ1dHRvbiArPSAiPGkgc3R5bGU9XCJwb3NpdGlvbjogYWJzb2x1dGU7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbGVmdDogNnB4OyB0b3A6IDNweDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaVZWUkdMVGdpUHo0OGMzWm5JSGh0Ykc1ek9tUmpQU0pvZEhSd09pOHZjSFZ5YkM1dmNtY3ZaR012Wld4bGJXVnVkSE12TVM0eEx5SWdlRzFzYm5NNlkyTTlJbWgwZEhBNkx5OWpjbVZoZEdsMlpXTnZiVzF2Ym5NdWIzSm5MMjV6SXlJZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklpQjRiV3h1Y3pwemRtYzlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JaUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSFpsY25OcGIyNDlJakV1TVNJZ2QybGtkR2c5SWpFMklpQm9aV2xuYUhROUlqRTJJaUIyYVdWM1FtOTRQU0l3SURBZ01UWWdNVFlpSUdsa1BTSnpkbWN5SWlCNGJXdzZjM0JoWTJVOUluQnlaWE5sY25abElqNDhjR0YwYUNCa1BTSk5JRFFzTUNBMExEZ2dNQ3c0SURnc01UWWdNVFlzT0NBeE1pdzRJREV5TERBZ05Dd3dJSG9pSUdacGJHdzlJaU5tWm1abVptWWlJQzgrUEM5emRtYyspOyBiYWNrZ3JvdW5kLXNpemU6IDEycHg7IGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7IHdpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7XCI+PC9pPiI7CiAgICAgICAgYnV0dG9uICs9ICI8c3BhbiBzdHlsZT1cInBhZGRpbmctcmlnaHQ6IDEycHg7XCI+RG93bmxvYWQ8L3NwYW4+PC9hPjwvZGl2PiI7CiAgICAgICAgdmFyIHN0eWxlID0gIjxzdHlsZT4jZGlzdGlsbHZpZGVvIGJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcntwYWRkaW5nOjA7bWFyZ2luOjB9I2Rpc3RpbGx2aWRlbyBhe2JhY2tncm91bmQtY29sb3I6IzE1Mzg4Y30jZGlzdGlsbHZpZGVvIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojRTkxRTYzfSNkaXN0aWxsdmlkZW8gYTphY3RpdmV7YmFja2dyb3VuZC1jb2xvcjpyZ2IoMCwgMTUxLCA3NCl9PC9zdHlsZT4iOwogICAgICAgIHZhciB0bXAgPSB3cmFwLmlubmVySFRNTDsKICAgICAgICB3cmFwLmlubmVySFRNTCA9IHRtcCArIGJ1dHRvbiArIHN0eWxlOwogICAgfQp9CgpmdW5jdGlvbiBBZGR5dHBvbHltZXIoKSB7CiAgICB2YXIgYnV0dG9uRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpOwogICAgYnV0dG9uRGl2LnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgYnV0dG9uRGl2LmlkID0gImRpc3RpbGx2aWRlbyI7CiAgICB2YXIgYWRkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpOwogICAgYWRkQnV0dG9uLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJEb3dubG9hZCBWaWRlbyIpKTsKICAgIGFkZEJ1dHRvbi5zdHlsZS53aWR0aCA9ICIxMDAlIjsKICAgIGFkZEJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIzE1Mzg4YyI7CiAgICBhZGRCdXR0b24uc3R5bGUuY29sb3IgPSAid2hpdGUiOwogICAgYWRkQnV0dG9uLnN0eWxlLnRleHRBbGlnbiA9ICJjZW50ZXIiOwogICAgYWRkQnV0dG9uLnN0eWxlLnBhZGRpbmcgPSAiNXB4IDEwcHgiOwogICAgYWRkQnV0dG9uLnN0eWxlLm1hcmdpbiA9ICIwcHggMTBweCI7CiAgICBhZGRCdXR0b24uc3R5bGUuZm9udFNpemUgPSAiMTRweCI7CiAgICBhZGRCdXR0b24uc3R5bGUuYm9yZGVyID0gIjAiOwogICAgYWRkQnV0dG9uLnN0eWxlLmN1cnNvciA9ICJwb2ludGVyIjsKICAgIGFkZEJ1dHRvbi5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiMnB4IjsKICAgIGFkZEJ1dHRvbi5zdHlsZS5mb250RmFtaWx5ID0gIlJvYm90bywgQXJpYWwsIHNhbnMtc2VyaWYiOwogICAgYWRkQnV0dG9uLnN0eWxlLnRleHREZWNvcmF0aW9uID0gIm5vbmUiOwogICAgYWRkQnV0dG9uLmhyZWYgPSAiaHR0cHM6Ly9kaXN0aWxsdmlkZW8uY29tLz91cmw9IiArIHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgYWRkQnV0dG9uLnRhcmdldCA9ICJfYmxhbmsiOwogICAgYnV0dG9uRGl2LmFwcGVuZENoaWxkKGFkZEJ1dHRvbik7CiAgICB2YXIgdGFyZ2V0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIltpZD0nY291bnQnXSIpOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0YXJnZXRFbGVtZW50Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHRhcmdldEVsZW1lbnRbaV0uY2xhc3NOYW1lLmluZGV4T2YoInl0ZC12aWRlby1wcmltYXJ5LWluZm8tcmVuZGVyZXIiKSA+IC0xKSB7CiAgICAgICAgICAgIHRhcmdldEVsZW1lbnRbaV0uYXBwZW5kQ2hpbGQoYnV0dG9uRGl2KTsKICAgICAgICB9CiAgICB9Cn0KCgp9KSgpOwo="},{"name":"1024去60秒","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["*.t66y.*","*/*.t66y.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":["http://*/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1545223257336,"data":{}},"enabled":true,"position":9,"file_url":"https://greasyfork.org/scripts/375620-1024%E5%8E%BB60%E7%A7%92/code/1024%E5%8E%BB60%E7%A7%92.user.js","uuid":"c8cb079a-2d08-4c64-aad7-1f5bc5b3f854","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAxMDI05Y67NjDnp5IKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAxLjEuMwovLyBAZGVzY3JpcHRpb24gIOWOu+mZpDEwMjTnmoQ2MOenkuWxj+iUvQovLyBAYXV0aG9yICAgICAgIOaYjuaciOWkqVFRNzkxMjkwMTIzCi8vIEBtYXRjaCAgICAgICAgaHR0cDovLyovKgovLyBAaW5jbHVkZSAgICAgICoudDY2eS4qCi8vIEBpbmNsdWRlICAgICAgKi8qLnQ2NnkuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewpyZWFkUz0gbnVsbDsKcjFlYWRTPSBudWxsOwpyZTFhZFM9IG51bGw7CnJlYTFkUz0gbnVsbDsKcmVhZDFTPSBudWxsOwpyZWFkUzE9IG51bGw7CnIyZWFkUz0gbnVsbDsKcmUyYWRTPSBudWxsOwpyZWEyZFM9IG51bGw7CnJlYWQyUz0gbnVsbDsKcmVhZFMyPSBudWxsOwpyM2VhZFM9IG51bGw7CnJlM2FkUz0gbnVsbDsKcmVhM2RTPSBudWxsOwpyZWFkM1M9IG51bGw7CnJlYWRTMz0gbnVsbDsKcjRlYWRTPSBudWxsOwpyZTRhZFM9IG51bGw7CnJlYTRkUz0gbnVsbDsKcmVhZDRTPSBudWxsOwpyZWFkUzQ9IG51bGw7Cn0pKCk7Cg=="},{"name":"iqiyi-player-switch","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["*://*.iqiyi.com/*","*://v.baidu.com/*","*://music.baidu.com/mv/*","*://www.zybus.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null,"orig_connects":["qiyi.com"]}},"storage":{"ts":1545223322759,"data":{}},"enabled":true,"position":10,"file_url":"https://greasyfork.org/scripts/28356-iqiyi-player-switch/code/iqiyi-player-switch.user.js","uuid":"54404698-1849-42a3-833c-78dd18bd929d","source":""}]}